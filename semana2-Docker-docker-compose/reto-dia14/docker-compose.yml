services:
    vote:
        build: ./vote
        ports:
            - "80:80"
        environment:
            - REDIS_HOST=${REDIS_HOST:?error}
            - DATABASE_HOST=${DATABASE_HOST:?error}
            - DATABASE_USER=${DATABASE_USER}
            - DATABASE_PASSWORD=${DATABASE_PASSWORD}
            - DATABASE_NAME=${DATABASE_NAME}
        depends_on:
            - redis
        healthcheck:
            test: ["CMD", "curl", "-f", "http://vote/healthz"]
            interval: 5s
            timeout: 3s
            retries: 3
        networks:
            - votesapp-net
    result:
        build: ./result
        ports:
            - "3000:3000"
        environment:
            - APP_PORT=3000
            - DATABASE_HOST=${DATABASE_HOST:?error}
            - DATABASE_USER=${DATABASE_USER}
            - DATABASE_PASSWORD=${DATABASE_PASSWORD}
            - DATABASE_NAME=${DATABASE_NAME}
        depends_on:
            - redis
            - database
        healthcheck:
            test: ["CMD", "curl", "-f", "http://result:3000/healthz"]
            interval: 5s
            timeout: 3s
            retries: 3
        networks:
            - votesapp-net

    worker:
        build: ./worker    
        environment:
            - REDIS_HOST=${REDIS_HOST:?error}
            - DATABASE_HOST=${DATABASE_HOST}
            - DATABASE_USER=${DATABASE_USER}
            - DATABASE_PASSWORD=${DATABASE_PASSWORD}
            - DATABASE_NAME=${DATABASE_NAME}
        depends_on:
            - redis
            - database
        healthcheck:
            test: ["CMD", "curl", "-f", "http://worker:3000/healthz"]
            interval: 5s
            timeout: 3s
            retries: 3
        networks:
            - votesapp-net

    redis:
        image: "redis:alpine"
        ports:
            - "6379:6379"
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 5s
            timeout: 3s
            retries: 3
        networks:
            - votesapp-net

    database:
        image: "postgres:15-alpine"
        environment:
            POSTGRES_USER: ${DATABASE_USER}
            POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
            POSTGRES_DB: ${DATABASE_NAME}
        ports:
            - "5432:5432"
        volumes:
            - pgdata:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "${DATABASE_USER}"]
            interval: 5s
            timeout: 3s
            retries: 5
        networks:
            - votesapp-net

volumes:
    pgdata:

networks:
    votesapp-net: